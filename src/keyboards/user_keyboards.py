from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from src.methods.database.config_manager import ConfigManager

def get_file_upload_kb() -> ReplyKeyboardMarkup:
    kb = [
        [KeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª")]
    ]
    return ReplyKeyboardMarkup(keyboard=kb)


def get_admin_panel_kb() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="[üî®] –ë–∞–Ω", callback_data="ban"),
         InlineKeyboardButton(text="[üîì] –†–∞–∑–±–∞–Ω", callback_data="unban")],
        # [InlineKeyboardButton(text="[‚úèÔ∏è] –°–º–µ–Ω–∏—Ç—å apikey", callback_data="setkey"),
        # [InlineKeyboardButton(text="[üé≠] –°–º–µ–Ω–∏—Ç—å prompt", callback_data="setprompt")],
        [InlineKeyboardButton(text="[üé≠] –õ–∏—á–Ω–æ—Å—Ç–∏", callback_data="getprompts_first_0_0")],
        [InlineKeyboardButton(text="[‚úâÔ∏è] –†–∞—Å—Å—ã–ª–∫–∞", callback_data="queue"),
         InlineKeyboardButton(text="[üíª] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")],
         [InlineKeyboardButton(text="[üîë] ApiKeys", callback_data="apikeys"),
         InlineKeyboardButton(text="[‚öôÔ∏è] –ù–∞—Å—Ç—Ä–æ–π–∫–∏",callback_data="settings")]
    ]

    return InlineKeyboardMarkup(inline_keyboard=kb)

def get_settings_kb() -> InlineKeyboardMarkup:
    kb = [
        
        [InlineKeyboardButton(text="–ö–∞–Ω–∞–ª", callback_data="channel")],
        [InlineKeyboardButton(text="–î–ª–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞", callback_data="request_len"),
         InlineKeyboardButton(text="–î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞", callback_data="max_tokens")],
        [InlineKeyboardButton(text="–®–∞–≥ –æ—á–∏—Å—Ç–∫–∏", callback_data="limit_clear_msg")],
        [InlineKeyboardButton(text="–†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",callback_data="limit_msg")],
        [InlineKeyboardButton(text="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",callback_data="temperature")],
        [InlineKeyboardButton(text="‚ùå–£–¥–∞–ª–∏—Ç—å —é–∑–µ—Ä–æ–≤",callback_data="del_users")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥",callback_data="admin")]
    ]

    return InlineKeyboardMarkup(inline_keyboard=kb)

def get_subscription_kb(link) -> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üóù –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url=link)],
        [InlineKeyboardButton(text='üîé –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data="check_subscribe")]
    ])

    return ikb

def get_apikeys_kb() -> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="addkey"),
        InlineKeyboardButton(text="‚ùå–£–¥–∞–ª–∏—Ç—å", callback_data="del_apikeys")],
        [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data="admin")]
    ])
    return ikb
def get_del_apikeys_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–î–∞, —É–¥–∞–ª–∏—Ç—å', callback_data="del_apikeys_yes")],
        [InlineKeyboardButton(text='üîô–û—Ç–º–µ–Ω–∞', callback_data="apikeys")]
    ])
    return ikb


def get_del_users_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–î–∞, —É–¥–∞–ª–∏—Ç—å', callback_data="del_users_yes"),
        InlineKeyboardButton(text='üîô–û—Ç–º–µ–Ω–∞', callback_data="settings")]
    ])
    return ikb

def get_del_prompts_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–î–∞, —É–¥–∞–ª–∏—Ç—å', callback_data="del_prompts_yes"),
        InlineKeyboardButton(text='üîô–û—Ç–º–µ–Ω–∞', callback_data="admin")]
    ])
    return ikb


def cancel_prompts_kb() -> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data="cancel_state_prompts")]
    ])

    return ikb

def cancel_kb() -> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data="cancel_state")]
    ])

    return ikb

def back_admin_panel_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="admin")]
    ])
    return ikb

def add_more_tokens() ->InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='[‚úèÔ∏è] –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ',callback_data="addkey")],
        [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥',callback_data="admin")]
    ])
    return ikb

async def get_sub_kb() -> InlineKeyboardMarkup:
    sub = await ConfigManager.get_value('sub')
    
    if sub == 1:
        sub_1= "‚úîÔ∏è"
        sub_0 =""
    elif sub == 0:
        sub_1= ""
        sub_0 ="‚úîÔ∏è"
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–î–∞{sub_1}', callback_data="sub_1"),
         InlineKeyboardButton(text=f'–ù–µ—Ç{sub_0}', callback_data="sub_0")],
        [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data="channel")]
    ])
    return ikb
def get_channel_kb() -> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å ID', callback_data="set_channel"),
         InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å link', callback_data="set_link")],
        [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="sub")],
        [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data="settings")]
    ])
    return ikb

def get_request_len_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ', callback_data="set_request_len")],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="settings")]
    ])
    return ikb

def get_max_tokens_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ', callback_data="set_max_tokens")],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="settings")]
    ])
    return ikb

def get_limit_clear_msg_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ', callback_data="set_limit_clear_msg")],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="settings")]
    ])
    return ikb

def get_limit_msg_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ', callback_data="set_limit_msg")],
        [InlineKeyboardButton(text='‚ùå–û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Ç', callback_data="clear_all_context")],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="settings")]
    ])
    return ikb

def get_temperature_kb()-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ', callback_data="set_temperature")],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="settings")]
    ])
    return ikb

def get_prompt_kb(prompt_id)-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f"del_prompt_{prompt_id}")],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data="getprompts_first_0_0")]
    ])
    return ikb
def get_del_prompt_kb(prompt_id)-> InlineKeyboardMarkup:
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–î–∞, —É–¥–∞–ª–∏—Ç—å', callback_data=f"del_prompt_yes_{prompt_id}"),
        InlineKeyboardButton(text='üîô–û—Ç–º–µ–Ω–∞', callback_data=f"prompt_{prompt_id}_0")]
    ])
    return ikb

def get_prompts_kb(prompts,current_page:int, total_pages:int,view_mode:int)-> InlineKeyboardMarkup:
    
    buttons = []
    for prompt in prompts:
        buttons = buttons+[InlineKeyboardButton(text=prompt[1], callback_data=f"prompt_{prompt[0]}_{view_mode}")]
    pagination = []
    # if current_page != 1:
    # pagination.append(InlineKeyboardButton(text='‚è™', callback_data=f"getprompts_first_{current_page}"))
    # if current_page > 1:
    pagination.append(InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f"getprompts_prev_{current_page}_{view_mode}"))
    pagination.append(InlineKeyboardButton(text = f"{current_page}/{total_pages}", callback_data="current_page"))
    # if current_page < total_pages:
    pagination.append(InlineKeyboardButton(text='‚ñ∂Ô∏è', callback_data=f"getprompts_next_{current_page}_{view_mode}"))
    # if current_page!= total_pages:
    # pagination.append(InlineKeyboardButton(text='‚è©', callback_data=f"getprompts_last_{current_page}"))

    # buttons.append(pagination)
    footer = []
    
    footer.append(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data="add_prompt"))
    footer.append(InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ', callback_data="del_prompts"))
    back = []
    back.append(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="admin"))
    # buttons.append(footer)
    if view_mode == 0:
        rows= [[btn] for btn in buttons] + [pagination] + [footer] + [back]
    elif view_mode == 1:
        rows= [[btn] for btn in buttons] + [pagination] 
    ikb = InlineKeyboardMarkup(inline_keyboard=rows)
    return ikb

def get_context_kb(context_status)-> InlineKeyboardMarkup:
    btn = "–í–∫–ª—é—á–∏—Ç—å"
    if context_status==1:
        btn = "–í—ã–∫–ª—é—á–∏—Ç—å"
    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç', callback_data=f"del_context")],
        [InlineKeyboardButton(text=f'{btn} –∫–æ–Ω—Ç–µ–∫—Å—Ç', callback_data=f"context_status_{context_status}")],
        [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data="start")]
    ])
    return ikb
    
def get_menu() -> ReplyKeyboardMarkup:
    rkb = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton('üé≠–õ–∏—á–Ω–æ—Å—Ç–∏','üé≠–õ–∏—á–Ω–æ—Å—Ç–∏')],
        [KeyboardButton('üë§–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç','üë§–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç')]
    ])
    return rkb

